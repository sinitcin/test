version: 2.1
jobs:
  fetch:
    docker:
      - image: ubuntu:latest
    working_directory: /mnt/project
    steps:
      - checkout
      - restore_cache:
          keys:
            - cargo-v1-{{ checksum "Cargo.toml" }}-
            - cargo-v1-
      - run: apt-get update
      - run: apt-get install -y wget curl
      - run: whereis wget
      - run:
          name: "Install Rustup"
          command: |
            set -eux; \
            url="https://static.rust-lang.org/rustup/dist/x86_64-unknown-linux-gnu/rustup-init"; \
            /usr/bin/wget "$url"; \
            chmod +x rustup-init; \
            RUSTUP_USE_CURL=1 ./rustup-init -y --no-modify-path --default-toolchain nightly; \
            rm rustup-init; \
            chmod -R a+w $RUSTUP_HOME $CARGO_HOME; \
            rustup --version; \
            cargo --version; \
            rustc --version;
          environment:
            PATH: "${PATH}:$HOME/.cargo/bin"
            RUSTUP_HOME: "~/.rustup"
            CARGO_HOME: "~/.cargo"
      - run: cargo update
      - run: cargo fetch
      - persist_to_workspace:
          root: "."
          paths:
            - Cargo.lock
      - save_cache:
          key: cargo-v1-{{ checksum "Cargo.toml" }}-{{ checksum "Cargo.lock" }}
          paths:
            - /usr/local/cargo/registry
            - /usr/local/cargo/git
  test:
    docker:
      - image: ubuntu:latest
    working_directory: /mnt/project
    steps:
      - checkout
      - attach_workspace:
          at: "."
      - restore_cache:
          keys:
            - cargo-v1-{{ checksum "Cargo.toml" }}-{{ checksum "Cargo.lock" }}
      - run: rustup default nightly
      - run: apt-get update
      - run: apt-get install -y libvips*
      - run:
          name: Print version information
          command: rustc --version; cargo --version
      - run:
          name: Build and test with nightly Rust
          command: cargo test --verbose --frozen
  build:
    docker:
      - image: ubuntu:latest
    working_directory: /mnt/project
    steps:
      - checkout
      - attach_workspace:
          at: "."
      - restore_cache:
          keys:
            - cargo-v1-{{ checksum "Cargo.toml" }}-{{ checksum "Cargo.lock" }}
      - run: rustup default nightly
      - run: apt-get update
      - run: apt-get install -y libvips*
      - run:
          name: Print version information
          command: rustc --version; cargo --version
      - run:
          name: Build and test with nightly Rust
          command: cargo build --verbose
#      - image: rust:latest
#  publish:
#      - image: rust:latest
  deploy:
    docker:
      - image: ubuntu:latest
    working_directory: /mnt/project
    steps:
      - checkout
      - attach_workspace:
          at: "."
      - restore_cache:
          keys:
            - cargo-v1-{{ checksum "Cargo.toml" }}-{{ checksum "Cargo.lock" }}
      - run: apt-get install apt-transport-https ca-certificates curl gnupg-agent software-properties-common
      - run: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
      - run: apt-key fingerprint 0EBFCD88
      - run: add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
      - run: apt-get update
      - run: apt-get install docker-ce docker-ce-cli containerd.io
      - run: curl -L "https://github.com/docker/compose/releases/download/1.24.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
      - run: chmod +x /usr/local/bin/docker-compose
      - run: docker run hello-world
      - run: docker-compose up
workflows:
  version: 2.1
  continuous_deployment:
    jobs:
      - fetch
      - test:
          requires:
            - fetch
      - build:
          requires:
            - fetch
      - deploy:
          requires:
            - test
            - build
#      - publish:
#          requires:
#            - publish
